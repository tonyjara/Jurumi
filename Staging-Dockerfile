FROM node:18-alpine AS deps

RUN apk add --no-cache libc6-compat

WORKDIR /app

COPY package.json yarn.lock ./ 
RUN yarn install --frozen-lockfile

# Rebuild the source code only when needed
FROM node:18-alpine AS builder

ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED 1

WORKDIR /app

COPY next.config.js ./
COPY package.json yarn.lock ./ 
COPY --from=deps /app/node_modules ./node_modules
COPY . .

RUN npx prisma generate
RUN yarn build

FROM node:18-alpine AS runner
WORKDIR /app

# ARG DATABASE_URL
# ARG NEXTAUTH_SECRET
# ARG NEXTAUTH_URL
# ARG STORAGE_SASTOKEN
# ARG STORAGE_RESOURCE_NAME
# ARG JWT_SECRET
# ARG NEXT_PUBLIC_WEB_URL
# ENV DATABASE_URL ${DATABASE_URL}
# ENV NEXTAUTH_SECRET ${NEXTAUTH_SECRET}
# ENV NEXTAUTH_URL ${NEXTAUTH_URL}
# ENV STORAGE_SASTOKEN ${STORAGE_SASTOKEN}
# ENV STORAGE_RESOURCE_NAME ${STORAGE_RESOURCE_NAME}
# ENV JWT_SECRET ${JWT_SECRET}
# ENV NEXT_PUBLIC_WEB_URL ${NEXT_PUBLIC_WEB_URL}

ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED 1

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

COPY --from=builder --chown=nextjs:nodejs /app/public ./public
COPY --from=builder --chown=nextjs:nodejs /app/package.json ./package.json
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

USER nextjs

EXPOSE 3000

ENV PORT 3000


CMD ["node", "server.js"]